<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.akanemurakawa.kaguya.dao.mapper.ArticleMapper">
  <!-- author: HanaeYuuma -->
  <resultMap id="WithCategoryAndUserResultMap" type="com.hanaeyuuma.freeblogs.model.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="article_date" jdbcType="TIMESTAMP" property="articleDate" />
    <result column="article_sumary" jdbcType="VARCHAR" property="articleSumary" />
    <result column="article_hit" jdbcType="INTEGER" property="articleHit" />
    <result column="article_content" jdbcType="LONGVARCHAR" property="articleContent" />
    <!-- 一对一关联查询 -->
    <association property="articleCategory" javaType="com.hanaeyuuma.freeblogs.model.Category">
        <id column="id" jdbcType="INTEGER" property="id" />
	    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    </association>
	<association property="articleUser" javaType="com.hanaeyuuma.freeblogs.model.User">
          <id column="id" jdbcType="INTEGER" property="id" />
    	  <result column="user_username" jdbcType="VARCHAR" property="userUsername" />
    	  <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    </association>
  </resultMap>
  
  <resultMap id="BaseResultMap" type="com.hanaeyuuma.freeblogs.model.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="article_date" jdbcType="TIMESTAMP" property="articleDate" />
    <result column="article_sumary" jdbcType="VARCHAR" property="articleSumary" />
    <result column="article_hit" jdbcType="INTEGER" property="articleHit" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hanaeyuuma.freeblogs.model.Article">
    <result column="article_content" jdbcType="LONGVARCHAR" property="articleContent" />
  </resultMap>
  
  <!-- author: HanaeYuuma -->
  <sql id="With_Category_And_User_Column_List">
  	a.id, a.user_id, a.article_title, a.article_date, a.article_sumary, a.article_hit, 
  	c.id, c.category_name, 
  	u.id, u.user_username, u.user_avatar
  </sql>
  <!-- author: HanaeYuuma -->
  <sql id="Article_Detail_Column_List">
  	a.id, a.user_id, a.article_title, a.article_date, a.article_sumary, a.article_content, a.article_hit, 
  	c.id, c.category_name, 
  	u.id, u.user_username, u.user_avatar
  </sql>
  <sql id="Base_Column_List">
    id, user_id, article_title, article_date, article_sumary, article_hit
  </sql>
  <sql id="Blob_Column_List">
    article_content
  </sql>
  
  <!-- author: HanaeYuuma -->
  <!-- 查询一个用户的所有文章， 并带有分类和用户的信息 -->
  <select id="selectWithCategoryAndUser" parameterType="java.lang.Integer" resultMap="WithCategoryAndUserResultMap">
    select 
    <include refid="With_Category_And_User_Column_List" />
  	from freeblogs_article a, freeblogs_category c, freeblogs_user u 
    where a.user_id = #{userId,jdbcType=INTEGER} and a.user_id = u.id and a.id = c.article_id
    order by article_date desc
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 查询所有用户的所有文章， 并带有分类和用户的信息 -->
  <select id="selectAllWithCategoryAndUser" resultMap="WithCategoryAndUserResultMap">
    select 
    <include refid="With_Category_And_User_Column_List" />
  	from freeblogs_article a, freeblogs_category c, freeblogs_user u 
    where a.user_id = u.id and a.id = c.article_id and a.article_title != 'Welcome to FreeBlogs.'
    order by article_date desc
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 查看一个用户近期3篇文章 -->
  <select id="selectRecentArticles" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select id, user_id, article_title, article_date
  	from freeblogs_article 
  	where user_id = #{userId,jdbcType=INTEGER}
  	order by article_date desc limit 0,3
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 查看一个用户3篇热门文章 -->
  <select id="selectHotArticles" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select id, user_id, article_title, article_date, article_hit
  	from freeblogs_article
  	where user_id = #{userId,jdbcType=INTEGER}
  	order by article_hit desc limit 0,3
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 归档功能，查询一个用户全部文章基本信息 -->
  <select id="selectAllBaseInfo" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
	select 
    <include refid="Base_Column_List" />
  	from freeblogs_article 
  	where user_id = #{userId,jdbcType=INTEGER}
  	order by article_date desc
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 通过标题进行查找文章，只返回内容 -->
  <select id="selectContentByTitle" parameterType="java.lang.String" resultType="java.lang.String">
    select article_content
  	from freeblogs_article where article_title = #{articleTitle,jdbcType=VARCHAR}
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 通过id查询文章基本信息 -->
  <select id="selectBaseByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
	select 
    <include refid="Base_Column_List" />
  	from freeblogs_article where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 通过id查询文章，并带有相应分类和用户信息 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="WithCategoryAndUserResultMap">
	select 
    <include refid="Article_Detail_Column_List" />
  	from freeblogs_article a, freeblogs_category c, freeblogs_user u 
    where a.id = #{id,jdbcType=INTEGER} and a.user_id = u.id and a.id = c.article_id  
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 查询文章的标题 -->
  <select id="selectTitleByPrimaryKey" parameterType="java.lang.Integer" resultType="java.lang.String">
	select article_title from freeblogs_article where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 查询一个用户前一篇文章的标题 -->
  <select id="selectPreTitleByPrimaryKey" parameterType="com.hanaeyuuma.freeblogs.model.Article" resultMap="ResultMapWithBLOBs">
   select id, article_title from freeblogs_article 
   where id = (select id from freeblogs_article where 
   user_id = #{userId,jdbcType=INTEGER} and
   id &lt; #{id,jdbcType=INTEGER} 
   order by id desc limit 1)
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 查询一个用户后一篇文章的标题 -->
  <select id="selectNextTitleByPrimaryKey" parameterType="com.hanaeyuuma.freeblogs.model.Article" resultMap="ResultMapWithBLOBs">
	select id, article_title from freeblogs_article 
	where id = (select id from freeblogs_article where
	user_id = #{userId,jdbcType=INTEGER} and id &gt; #{id,jdbcType=INTEGER}
	order by id asc limit 1)
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 查询一个用户文章最小的id -->
  <select id="selectMinIdByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	select id from freeblogs_article 
	where user_id = #{userId,jdbcType=INTEGER}
	order by id asc limit 1
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 查询一个用户文章最大的id -->
  <select id="selectMaxIdByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	select id from freeblogs_article 
	where user_id = #{userId,jdbcType=INTEGER}
	order by id desc limit 1
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 查询文章的标题和内容 -->
  <select id="selectTitleAndContentByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
	select id, article_title, article_content from freeblogs_article where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 更新阅读人数 -->
  <update id="updateHitByPrimaryKey" parameterType="java.lang.Integer">
  	update freeblogs_article set article_hit = article_hit + 1
  	where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- author: HanaeYuuma -->
  <!-- 添加文章，配置获取自增主键 -->
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.hanaeyuuma.freeblogs.model.Article">
    insert into freeblogs_article (user_id, article_title, 
      article_date, article_sumary, article_content)
      values (#{userId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, 
      #{articleDate,jdbcType=TIMESTAMP}, #{articleSumary,jdbcType=VARCHAR}, #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  
  <!-- author: HanaeYuuma -->
  <!-- 批处理删除文章 -->
  <delete id="batchDeleteByPrimaryKey" parameterType="java.util.List">
    delete from freeblogs_article
    where id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
    	#{item}
    </foreach>
  </delete>
  
  <!-- author: HanaeYuuma -->
  <!-- 单个删除文章 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from freeblogs_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- author: HanaeYuuma -->
  <!-- 修改文章 -->
  <update id="updateByPrimaryKeySelective" parameterType="com.hanaeyuuma.freeblogs.model.Article">
    update freeblogs_article
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null">
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleDate != null">
        article_date = #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="articleSumary != null">
        article_sumary = #{articleSumary,jdbcType=VARCHAR},
      </if>
      <if test="articleHit != null">
        article_hit = #{articleHit,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null">
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- author: HanaeYuuma -->
  <!-- 批处理查询文章 -->
  <select id="batchSelectByUserIds" parameterType="java.util.List" resultMap="WithCategoryAndUserResultMap">
    select 
    <include refid="With_Category_And_User_Column_List" /> 
    from freeblogs_article a, freeblogs_category c, freeblogs_user u 
    where a.user_id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
    	#{item}
    </foreach>
    and  a.user_id = u.id and a.id = c.article_id
    order by article_date desc
  </select>
  
  <!-- author: HanaeYuuma -->
  <!-- 模糊查询-->  
  <select id="search" parameterType="java.lang.String" resultMap="WithCategoryAndUserResultMap">
  	<!-- mybatis的绑定，这里通过_parameter 或者#{_parameter }这样的格式才能获取传入的参数 -->
  	<bind name="pattern" value="'%' + _parameter + '%'"/>
    select 
    <include refid="With_Category_And_User_Column_List" />
  	from freeblogs_article a, freeblogs_category c, freeblogs_user u 
    where a.user_id = u.id and a.id = c.article_id
	and (
	
		LOWER(a.article_title)   like #{pattern} or
		LOWER(a.article_content) like #{pattern} or
		LOWER(c.category_name)   like #{pattern} or
		LOWER(u.user_username)   like #{pattern} 
    )order by a.article_date desc
  </select>
  
  <!-- 以下待使用 -->
  <insert id="insertSelective" parameterType="com.hanaeyuuma.freeblogs.model.Article">
    insert into freeblogs_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleTitle != null">
        article_title,
      </if>
      <if test="articleDate != null">
        article_date,
      </if>
      <if test="articleSumary != null">
        article_sumary,
      </if>
      <if test="articleHit != null">
        article_hit,
      </if>
      <if test="articleContent != null">
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleDate != null">
        #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="articleSumary != null">
        #{articleSumary,jdbcType=VARCHAR},
      </if>
      <if test="articleHit != null">
        #{articleHit,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null">
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hanaeyuuma.freeblogs.model.Article">
    update freeblogs_article
    set user_id = #{userId,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      article_sumary = #{articleSumary,jdbcType=VARCHAR},
      article_hit = #{articleHit,jdbcType=INTEGER},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanaeyuuma.freeblogs.model.Article">
    update freeblogs_article
    set user_id = #{userId,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      article_sumary = #{articleSumary,jdbcType=VARCHAR},
      article_hit = #{articleHit,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>